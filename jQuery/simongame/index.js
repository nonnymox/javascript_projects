let buttonColors = ["red", "blue", "green", "yellow"]; // Array of available button colors
let gamePattern = []; // Stores the sequence generated by the game
let userPattern = []; // Stores the user's sequence
let started = false; // Tracks if the game has started
let level = 0; // Tracks the current level

// Function to generate the next color in the sequence
function nextSequence() {
  userPattern = []; // Reset user's input for the new level
  level++; // Increase level count
  $("h1").text(`Level ${level}`); // Update level display in the header

  // Generate a random number between 0 and 3 to select a color
  let randomNumber = Math.floor(Math.random() * 4);
  let randomChosenColour = buttonColors[randomNumber]; // Get corresponding color from the array

  // Animate the randomly chosen button
  $(`div#${randomChosenColour}`).fadeOut(100).fadeIn(100);

  // Play sound for the selected color
  playSound(randomChosenColour);

  // Add the selected color to the game sequence
  gamePattern.push(randomChosenColour);
}

// Start the game when a key is pressed
$(document).keypress(() => {
  if (!started) {
    // Check if the game hasn't started yet
    level = 0; // Reset level
    gamePattern = []; // Clear game sequence
    userPattern = []; // Clear user sequence
    started = true; // Mark game as started
    nextSequence(); // Generate the first sequence
  }
});

// Event listener for when the user clicks a button
$(".btn").click(function (evt) {
  let userColor = evt.target.id; // Get the ID (color) of the clicked button

  playSound(userColor); // Play sound for the clicked button
  animatePress(userColor); // Add press animation effect
  userPattern.push(userColor); // Store the user's choice in the user pattern array

  // Check if the user clicked the correct sequence
  checkAnswer(userPattern.length - 1);
});

// Function to check if the user's input matches the game sequence
function checkAnswer(currentIndex) {
  if (userPattern[currentIndex] === gamePattern[currentIndex]) {
    // Check if the latest click is correct
    if (userPattern.length === gamePattern.length) {
      // Check if user completed the sequence correctly
      setTimeout(() => nextSequence(), 1000); // Move to the next sequence after 1 second
    }
  } else {
    console.log("Game Over! Wrong sequence."); // Log game over message

    $("h1").text("Game Over! Press Any Key to Restart"); // Update the header with game over message

    playSound("wrong"); // Play the wrong answer sound

    started = false; // Reset the game state so it can be restarted
  }
}

// Function to play sound corresponding to a color
function playSound(name) {
  let sound = `sounds/${name}.mp3`; // Construct the sound file path
  let audio = new Audio(sound); // Create an audio object
  audio.play(); // Play the sound
}

// Function to animate the button press effect
function animatePress(currentColor) {
  $(`.btn#${currentColor}`).addClass("pressed"); // Add CSS class to simulate press effect

  setTimeout(() => {
    $(`.btn#${currentColor}`).removeClass("pressed"); // Remove press effect after 100ms
  }, 100);
}
